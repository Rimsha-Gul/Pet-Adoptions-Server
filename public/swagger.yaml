components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        SignupResponse:
            properties:
                username:
                    type: string
                email:
                    type: string
                address:
                    type: string
            required:
                - username
                - email
                - address
            type: object
            additionalProperties: false
        UserPayload:
            properties:
                username:
                    type: string
                email:
                    type: string
                address:
                    type: string
                password:
                    type: string
            required:
                - username
                - email
                - address
                - password
            type: object
            additionalProperties: false
        SendCodePayload:
            properties:
                email:
                    type: string
            required:
                - email
            type: object
            additionalProperties: false
        VerificationResponse:
            properties:
                tokens:
                    properties:
                        refreshToken:
                            type: string
                        accessToken:
                            type: string
                    required:
                        - refreshToken
                        - accessToken
                    type: object
                isVerified:
                    type: boolean
            required:
                - tokens
                - isVerified
            type: object
            additionalProperties: false
        VerificationPayload:
            properties:
                email:
                    type: string
                verificationCode:
                    type: string
            required:
                - email
                - verificationCode
            type: object
            additionalProperties: false
        TokenResponse:
            properties:
                tokens:
                    properties:
                        refreshToken:
                            type: string
                        accessToken:
                            type: string
                    required:
                        - refreshToken
                        - accessToken
                    type: object
            required:
                - tokens
            type: object
            additionalProperties: false
        LoginPayload:
            properties:
                email:
                    type: string
                password:
                    type: string
            required:
                - email
                - password
            type: object
            additionalProperties: false
        SessionResponse:
            properties:
                username:
                    type: string
                email:
                    type: string
                address:
                    type: string
            required:
                - username
                - email
                - address
            type: object
            additionalProperties: false
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
info:
    title: express-ts
    version: 1.0.0
    license:
        name: ISC
    contact: {}
openapi: 3.0.0
paths:
    /auth/signup:
        post:
            operationId: Signup
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SignupResponse'
                            examples:
                                'Example 1':
                                    value: {username: 'John Doe', email: johndoe@example.com, address: '123 Main St'}
            summary: 'Accepts user info, creates user and returns user info along JWT tokens'
            tags:
                - Auth
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserPayload'
    /auth/sendVerificationCode:
        post:
            operationId: SendVerificationCode
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: string
            summary: 'Generates a 6-digit code and sends it'
            tags:
                - Auth
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendCodePayload'
    /auth/verifyEmail:
        post:
            operationId: VerifyEmail
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationResponse'
                            examples:
                                'Example 1':
                                    value: {isVerified: true, tokens: {accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..., refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...}}
            summary: 'Accepts a 6-digit code from user, verifies the code in db'
            tags:
                - Auth
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerificationPayload'
    /auth/login:
        post:
            operationId: Login
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TokenResponse'
                            examples:
                                'Example 1':
                                    value: {tokens: {accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..., refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...}}
            summary: 'Verifies the user''s email and password and returns JWT tokens'
            tags:
                - Auth
            security: []
            parameters: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginPayload'
    /auth/logout:
        delete:
            operationId: Logout
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: string
            summary: 'Removes JWT tokens and returns success message'
            tags:
                - Auth
            security:
                -
                    bearerAuth: []
            parameters: []
    /session:
        get:
            operationId: Session
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                            examples:
                                'Example 1':
                                    value: {username: 'John Doe', email: johndoe@example.com, address: '123 Main St'}
            summary: 'Get a user''s session info'
            tags:
                - Session
            security:
                -
                    bearerAuth: []
            parameters: []
servers:
    -
        url: /
tags:
    -
        name: Auth
        description: 'Operations about auth'
    -
        name: Session
        description: 'Get Session information'
